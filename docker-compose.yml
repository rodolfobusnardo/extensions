version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "83:80" # Changed from 8080:80
    volumes:
      - ./public:/var/www/html/
      - ./src:/var/www/html/src/
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_DATABASE: phone_extensions
      DB_USER: user
      DB_PASSWORD: password
      DB_PORT: 3306 # Default MySQL port
    restart: unless-stopped

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: phone_extensions
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql # Existing volume for persistence
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # Added mount for init script
      - ./config/mysql/charset-defaults.cnf:/etc/mysql/conf.d/charset-defaults.cnf # Mount charset config
    ports: # Exposing DB port for external access if needed
      - "3609:3306"
    command: # Ensure mysqld starts with these settings, complementing the .cnf file
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      # - "--skip-character-set-client-handshake" # This is in the .cnf, but can be here too
    healthcheck: # Added section
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s 
    restart: unless-stopped
    # For debugging or direct access from host, you could expose the port:
    # ports:
    #   - "33061:3306"

volumes:
  db_data: # Defines the named volume for MySQL data
